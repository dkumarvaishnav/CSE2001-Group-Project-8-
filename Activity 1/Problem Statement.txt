EXPERIMENT NO. --> 6

Create a class by name date with the member data day, month and year. Perform the following:
• Overload all relational operators <, <=, >, >=, ==, !=
• Overload ++ operator to increment a date by one day
• Overload + to add given number of days to find the next date
• Provide the necessary function to use the statement like days=dt; where days is an int 
variable and dt is an object of date class. The statement is intended to assign the number of days 
elapsed in the current year of the date to the variable days. Note that this is a case of conversion 
from derived type to basic type.
<<<<<<< Updated upstream
=======






#include <iostream>
using namespace std;

class Date {
private:
    int day;
    int month;
    int year;

    // Helper function to check if a year is a leap year
    bool isLeapYear() const {
        return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
    }

    // Helper function to get the number of days in a month
    int daysInMonth() const {
        int days[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        if (month == 2 && isLeapYear()) {
            return 29;
        } else {
            return days[month - 1];
        }
    }
>>>>>>> Stashed changes
